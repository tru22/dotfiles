;;;(package-initialize)
;;;(setq package-archives
;;;      '(("gnu" . "http://elpa.gnu.org/packages/")
;;;        ("melpa" . "http://melpa.org/packages/")
;;;        ("org" . "http://orgmode.org/elpa/")))

;;; package
 (require 'package)
 (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
 (add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/") t)
(package-initialize)
(require 'melpa)

;;; add load-path
(setq load-path (append
		 '("~/.emacs.d/lisp"
		   "~/.emacs.d/packages"
		   "~/.emacs.d/elpa")
		 load-path))

;;; proxy
;;; (setq url-proxy-services '(("http" . "http://proxy.uec.ac.jp:8080")))
;;;  (setq url-proxy-services '(("https" . "http://proxy.uec.ac.jp:8080")))

;;; set japanese mozc to zenkaku-hankaku as global key
(add-to-list 'load-path "/usr/share/emacs24/site-lisp/emacs-mozc")
(require 'mozc)
(setq default-input-method "japanese-mozc")
(global-set-key [zenkaku-hankaku] 'toggle-input-method)


;;; paren mode mixed
(setq show-paren-style 'mixed)

;;; No backup files
(setq backup-inihibited t)
(setq make-backup-files nil)
;;; delete if emacs shutdown
(setq delete-auto-save-files t)
;;; not display scratch massages
(setq initial-scratch-message "")

;;; not display column, line, scrollbar
(column-number-mode t)
(line-number-mode t)
(set-scroll-bar-mode nil)

;;; display full path on the titlebar
(setq frame-title-format
      (format "%%f- Emacs@%s" (system-name)))

;;; emphasize paren
(show-paren-mode t)
(setq show-paren-delay 0)
(setq show-paren-style 'expression)
(set-face-background 'show-paren-match-face "#ffdddd")


;;; stop cursor blink
(blink-cursor-mode 0)

;;; not showing toolbars
(tool-bar-mode -1)
(menu-bar-mode -1)

;;; UTF-8
;;; from http://qiita.com/ironsand/items/a53797bd48170104aa74
(prefer-coding-system 'utf-8)
(setq coding-system-for-read 'utf-8)
(setq coding-system-for-write 'utf-8)

;;; Paren settings
(show-paren-mode t)
(electric-pair-mode t)
(global-font-lock-mode t)

;;; Ignore case
(setq completion-ignore-case t)
(setq read-file-name-completion-ignore-case t)

;;; Line and column number
(global-linum-mode t)
(set-face-attribute 'linum nil
		    :foreground "#000"
		    :height 0.9)
(setq linum-format: "%4d: ")

;;; tranparancy
(set-frame-parameter (selected-frame) 'alpha '(0.95))


;;; python-mode indent
(add-hook 'python-mode-hook
    '(lambda ()
        (setq python-indent 4)
        (setq indent-tabs-mod nil)
        (define-key (current-local-map) "\C-h" 'python-backspace)
    ))

;;; Japanese font
; (set-fontset-font t 'japanese-jisx0208 (font-spec :family "IPAExGothic"))

(set-frame-font "ricty-13")

;;; aspell
(setq-default ispell-program-name "aspell")
(eval-after-load "ispell"
'(add-to-list 'ispell-skip-region-alist '("[^\000-\377]+")))
;;
(global-set-key (kbd "C-M-$") 'ispell-complete-word)

(mapc
(lambda (hook)
(add-hook hook 'flyspell-prog-mode))
'(
c-mode-common-hook
emacs-lisp-mode-hook
))
(mapc
(lambda (hook)
(add-hook hook
'(lambda () (flyspell-mode 1))))
'(
yatex-mode-hook
))


;; パスを通す
(add-to-list 'load-path
             (expand-file-name "~/.emacs.d/elpa/yasnippet/"))

;; 自分用・追加用テンプレート -> mysnippetに作成したテンプレートが格納される
(require 'yasnippet)
(setq yas-snippet-dirs
      '("~/.emacs.d/mysnippets"
        "~/.emacs.d/yasnippets"
        ))

;; 既存スニペットを挿入する
(define-key yas-minor-mode-map (kbd "C-x i i") 'yas-insert-snippet)
;; 新規スニペットを作成するバッファを用意する
(define-key yas-minor-mode-map (kbd "C-x i n") 'yas-new-snippet)
;; 既存スニペットを閲覧・編集する
(define-key yas-minor-mode-map (kbd "C-x i v") 'yas-visit-snippet-file)

(yas-global-mode 1)
